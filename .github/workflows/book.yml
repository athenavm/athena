# Documentation and mdbook related jobs.
# Reference: https://github.com/paradigmxyz/reth/blob/main/.github/workflows/book.yml

name: book

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "book/**"
  merge_group:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Install mdbook-linkcheck
        run: |
          mkdir mdbook-linkcheck
          curl -sSL -o mdbook-linkcheck.zip https://github.com/Michael-F-Bryan/mdbook-linkcheck/releases/latest/download/mdbook-linkcheck.x86_64-unknown-linux-gnu.zip
          unzip mdbook-linkcheck.zip -d ./mdbook-linkcheck
          chmod +x $(pwd)/mdbook-linkcheck/mdbook-linkcheck
          echo $(pwd)/mdbook-linkcheck >> $GITHUB_PATH

      - name: Run linkcheck
        working-directory: book
        run: mdbook-linkcheck --standalone

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install mdbook
        run: |
          mkdir mdbook
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.14/mdbook-v0.4.14-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook
          echo $(pwd)/mdbook >> $GITHUB_PATH

      - name: Install mdbook-template
        run: |
          mkdir mdbook-template
          curl -sSL https://github.com/sgoudham/mdbook-template/releases/latest/download/mdbook-template-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook-template
          echo $(pwd)/mdbook-template >> $GITHUB_PATH

      - name: Build book
        working-directory: book
        run: mdbook build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "book/book"

  preview:
    runs-on: ubuntu-latest
    needs: [lint, build]
    steps:
      - name: Deploy to Staging
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./book/book
          destination_dir: book/preview/${{ github.event.pull_request.number }}
          publish_branch: gh-pages

  deploy:
    # Only deploy if a push to main
    if: github.ref_name == 'main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [lint, build]

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    timeout-minutes: 60

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
